digraph D {
	fontname="sans";
	
	penwidth="2.0"
	edge [penwidth=1.5]
	node [penwidth=2.0]

	subgraph cluster_legend{
		label="legend";
		missing     [!NODE:missing!,     label="missing"];
		designed    [!NODE:designed!,    label="designed"];
		development [!NODE:development!, label="development"];
		compiled    [!NODE:compiled!,    label="compiled"];
		documented  [!NODE:documented!,  label="documented"];
		tested      [!NODE:tested!,      label="tested"];
		missing->designed->development->compiled->documented->tested;
	}

	subgraph cluster_joy {
		label="Joy";
		joy_node [!NODE:compiled!, label="joy_node"];
 		
 		joy[!TOPIC!, label="joy\nsensor_msgs/Joy.msg"];
	}

	subgraph cluster_motor_control {
		label = "Motor Control";
		control_node [!NODE:compiled!, label="control_node"];
		motor_hat_node [!NODE:compiled!, label="motor\nmotor_hat_node"];

		brushless_command[!TOPIC!, label="brushless_command\nstd_msgs/Int32MultiArray.msg"];
		control_node->motor_hat_node;
	}

	subgraph cluster_ros_pwm_pca9685 {
		label = "Ros Pwm pca9685";
		pwm_node [!NODE:compiled!, label="pwm\npwm_node"];
	}

	subgraph cluster_sensors {
		label = "Sensors";
		ir_height_node [!NODE:compiled!, label="ir\nir_height_node"];
		imu_node [!NODE:tested!, label="imu_node"];
 		
 		_height_ [!TOPIC!, label="_height_\nsensor_msgs/Range.msg"];
	}

	subgraph cluster_communication {
		label = "Communication";
		xbee [!NODE:tested!, label="xbee"];
		lora [!NODE:tested!, label="lora"];
	}

	subgraph cluster_duckiefloat_control {
		label = "Duckiefloat Control";
		autonomous_control_node [!NODE:compiled!, label="autonomous_control\nautonomous_control_node"];
		estop_node [!NODE:tested!, label="estop_node"];
		xbee_estop_node [!NODE:tested!, label="xbee_estop_node"];
		height_control_node [!NODE:compiled!, label="height_control\nheight_control_node"];
		joy_mapper_node [!NODE:compiled!, label="joy_mapper\njoy_mapper_node"];

		autonomous_cmd_vel [!TOPIC!, label="autonomous/cmd_vel\ngeometry_msgs/Twist.msg"];
 		cmd_vel [!TOPIC!, label="cmd_vel\ngeometry_msgs/Twist.msg"];
		height_control [!TOPIC!, label="height_control\nstd_msgs/Float32.msg"];
	}
	// == communication == //
	xbee->xbee_estop_node;

	// == joy_mapper_node == //
	joy_node->joy->joy_mapper_node;

	// == brushless == //
	control_node->brushless_command->pwm_node;

	// == ir_height_control == //
	ir_height_node->_height_->height_control_node;

	// == cmd_vel == //
	joy_mapper_node->cmd_vel->control_node;

	// == height_control == //
	height_control_node->height_control->joy_mapper_node;

	// == autonomous_control == //
	autonomous_control_node->autonomous_cmd_vel->joy_mapper_node;
}

